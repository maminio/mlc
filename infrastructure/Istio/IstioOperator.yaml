apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  profile: default
  components:
    ingressGateways:
      - name: istio-ingressgateway
        enabled: true
  meshConfig:
    accessLogFile: "/dev/stdout"
  values:
    grafana:
      enabled: true
    prometheus:
      enabled: true
    tracing:
      enabled: true
    kiali:
      enabled: true
    istio_cni:
      enabled: false
    #    security:
    #      selfSigned: false
    istiocoredns:
      enabled: true
    global:
      enableTracing: true
      mtls:
        # Default setting for service-to-service mtls. Can be set explicitly using
        # destination rules or service annotations.
        enabled: false
        # If set to true, and a given service does not have a corresponding DestinationRule configured,
        # or its DestinationRule does not have TLSSettings specified, Istio configures client side
        # TLS configuration automatically, based on the server side mTLS authentication policy and the
        # availibity of sidecars.
        auto: true
      meshExpansion:
        enabled: false
        # If set to true, the pilot and citadel mtls and the plaintext pilot ports
        # will be exposed on an internal gateway
        useILB: false

      sds:
        # SDS enabled. IF set to true, mTLS certificates for the sidecars will be
        # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
        enabled: false
        udsPath: ""
        # The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.
        # When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the
        # JWT is intended for the CA.
        token:
          aud: istio-ca

      multiCluster:
        enabled: false

      controlPlaneSecurityEnabled: true


